}
}
aux <-df[1,]
aux2<-as.data.frame(aux$obs)
fim<-cbind(aux,aux2)
fim$obs<-NULL
for(i in 2:length(df$dtme)){
aux <-df[i,]
aux2<-as.data.frame(aux$obs)
aux3<-cbind(aux,aux2)
aux3$obs<-NULL
fim<-rbind(fim,aux3)
}
View(fim)
dados <-fim
dados$dtme<-as.POSIXct(strptime(dados$dtme,"%Y-%m-%d %H:%M",tz=""))
p2 <- plot_ly(dados,x=~dtme, y=~avgT,
type = 'scatter',
color = I("red"),
name = "Temperatura",
mode="line",
hoverinfo = 'text',
text = ~paste('Data:', dtme,
'<br>Temperatura: ',avgT))%>%
layout(
yaxis = list (title = "Temperatura(C)"))
p2
dados <-loadDataApiV2(station,Sys.Date()-10,Sys.Date())
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
station <-"5b917e865415ab64cd6f4b7e"
dados <-loadDataApiV2(station,Sys.Date()-15,Sys.Date())
View(dados)
dados$dtme<-as.POSIXct(strptime(dados$dtme,"%Y-%m-%d %H:%M:%S",tz=""))
View(dados)
dados$dtmeh<-as.POSIXct(strptime(dados$dtme,"%Y-%m-%d %H",tz=""))
View(dados)
dados <-loadDataApiV2(station,Sys.Date()-15,Sys.Date())
dados$dtmeh<-as.POSIXct(strptime(dados$dtme,"%Y-%m-%d %H",tz=""))
View(dados)
dados$dtme<-as.POSIXct(strptime(dados$dtme,"%Y-%m-%d %H:%M",tz=""))
View(dados)
p2 <- plot_ly(dados,x=~dtme, y=~avgT,
type = 'scatter',
color = I("red"),
name = "Temperatura",
mode="line",
hoverinfo = 'text',
text = ~paste('Data:', dtme,
'<br>Temperatura: ',avgT))%>%
layout(
yaxis = list (title = "Temperatura(C)"))
p2
wall <<- cbind(datetime2=dados$dtmeh, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M:%S")),
doy = as.numeric(strftime(dd, format="%j"))) %>%
group_by(dd) %>% summarise(  avgT = avgT,
avgH = avgH)
wall <<- cbind(datetime2=dados$dtmeh, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M:%S")),
doy = as.numeric(strftime(dd, format="%j"))) %>%
group_by(dd) %>% summarise(  avgT = avgT,
avgH = avgH)
library(dplyr)
library(tidyr)
wall <<- cbind(datetime2=dados$dtmeh, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M:%S")),
doy = as.numeric(strftime(dd, format="%j"))) %>%
group_by(dd) %>% summarise(  avgT = avgT,
avgH = avgH)
wall <<- cbind(datetime2=dados$dtmeh, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M")),
doy = as.numeric(strftime(dd, format="%j"))) %>%
group_by(dd) %>% summarise(  avgT = avgT,
avgH = avgH)
cbind(datetime2=dados$dtmeh, dados)
wall <<- cbind(datetime2=dados$dtmeh, dados)
View(wall)
wall <<- cbind(datetime2=dados$dtmeh, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M")),
doy = as.numeric(strftime(dd, format="%j")))
View(wall)
wall <<- cbind(datetime2=dados$dtmeh, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M")),
doy = as.numeric(strftime(dd, format="%j")))
View(wall)
View(wall)
View(dados)
wall <<- cbind(datetime2=dados$dtmeh, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M")),
doy = as.numeric(strftime(dd, format="%j"))) %>%
group_by(dd) %>% summarise(  avgT = avgT,
avgH = avgH)
wall <<- cbind(datetime2=dados$dtmeh, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M")),
doy = as.numeric(strftime(dd, format="%j"))) %>%
group_by(dd)
View(wall)
wall <<- cbind(datetime2=dados$dtmeh, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M")),
doy = as.numeric(strftime(dd, format="%j"))) %>%
group_by(dtmeh) %>% summarise(  avgT = avgT,
avgH = avgH)
View(wall)
days<-ddply(dados,.(dtmeh),summarise,temp = avgT,ur = avgH)
dados$h<-as.POSIXct(strptime(dados$dtme,"%H",tz=""))
View(dados)
View(wall)
days<-ddply(wall,.(dd),summarise,temp = avgT,ur = avgH)
days<-ddply(wall,.(dd),summarise,temp = wall$avgT,ur = wall$avgH)
?ddply
wall <-NULL
wall <<- cbind(datetime2=dados$dtmeh, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M")),
doy = as.numeric(strftime(dd, format="%j")))
View(wall)
dados$h<-format(as.POSIXct(strptime(dados$dtme,"%Y-%m-%d %H:%M",tz="")) ,
format = "%H")
View(dados)
days<-ddply(dados,.(h),summarise,temp = avgT,ur = avgH)
wall <<- cbind(datetime2=dados$dtmeh, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M")),
doy = as.numeric(strftime(dd, format="%j"))) %>%
group_by(h) %>% summarise(  avgT = avgT,
avgH = avgH)
wall <-NULL
wall <<- cbind(hora=dados$h, dados) %>%
mutate(dd=as.Date(strptime(as.character(dtme), format="%Y-%m-%d %H:%M:%S")),
group_by(dd) %>% summarise(  maxTemp = max(temp),
minTemp = min(temp),
maxUr = max(rh),
temp=mean(temp),
chuva=sum(rain),
ur=mean(rh),
doy = first(doy),
s_dif = sum(dif),
hcp = sum(hcp))
p2 <- plot_ly(dados,x=~dtme, y=~avgT,
type = 'scatter',
color = I("red"),
name = "Temperatura",
mode="line",
hoverinfo = 'text',
text = ~paste('Data:', dtme,
'<br>Temperatura: ',avgT))%>%
layout(
yaxis = list (title = "Temperatura(C)"))
p2
p3 <- plot_ly(dados,x=~dtme, y=~avgH,
type = 'scatter',
color = I("purple"),
name = "Umidade",
mode="line",
hoverinfo = 'text',
text = ~paste('Data:', dtme,
'<br>Umidade: ',avgH," %"))%>%
layout(
yaxis = list (title = "Umidade(%)"))
subplot(
p2,
p3,
nrows = 2,titleX = FALSE,titleY =TRUE,shareX= TRUE,shareY=F)%>%
layout(
xaxis = list(title = "<br>Data"),
showlegend = FALSE
)
})
wall <<- cbind(hora=dados$h, dados) %>%
mutate(dd=as.Date(strptime(as.character(dtme), format="%Y-%m-%d %H:%M:%S"))),
group_by(dd) %>% summarise(  maxTemp = max(temp),
minTemp = min(temp),
maxUr = max(rh),
temp=mean(temp),
chuva=sum(rain),
ur=mean(rh),
doy = first(doy),
s_dif = sum(dif),
hcp = sum(hcp))
wall <<- cbind(hora=dados$h, dados) %>%
mutate(dd=as.Date(strptime(as.character(dtme), format="%Y-%m-%d %H:%M:%S"))),
group_by(h) %>% summarise(  maxTemp = max(temp),
minTemp = min(temp),
maxUr = max(rh),
temp=mean(temp),
chuva=sum(rain),
ur=mean(rh),
doy = first(doy),
s_dif = sum(dif),
hcp = sum(hcp))
dados$h<-format(as.POSIXct(strptime(dados$dtme,"%Y-%m-%d %H:%M",tz="")) ,
format = "%H")
days<-ddply(dados,.(h),summarise,temp = avgT,ur = avgH)
days<-ddply(dados,.(h),summarise,temp = mean(avgT),ur = mean(avgH))
View(days)
wall <<- cbind(datetime2=dados$dtme, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M:%S")),
# dif = calc_dif(as.numeric(avgT), as.numeric(avgH)),
doy = as.numeric(strftime(dd, format="%j"))) %>%
group_by(h) %>% summarise(avgT = mean(avgT),avgH = mean(avgH))
View(wall)
View(dados)
wall <<- cbind(datetime2=dados$dtme, dados) %>%
mutate(dd=as.Date(strptime(as.character(datetime2), format="%Y-%m-%d %H:%M:%S")),
# dif = calc_dif(as.numeric(avgT), as.numeric(avgH)),
doy = as.numeric(strftime(dd, format="%j"))) %>%
group_by(dtmeh) %>% summarise(avgT = mean(avgT),avgH = mean(avgH))
View(wall)
dados <-data.frame(dtme = wall$dtmeh,avgT = wall$avgT,avgH = wall$avgH)
View(dados)
p2 <- plot_ly(dados,x=~dtme, y=~avgT,
type = 'scatter',
color = I("red"),
name = "Temperatura",
mode="line",
hoverinfo = 'text',
text = ~paste('Data:', dtme,
'<br>Temperatura: ',avgT))%>%
layout(
yaxis = list (title = "Temperatura(C)"))
p2
runApp('Documents/startup/dashboard')
View(dados)
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
station <- "5b917e865415ab64cd6f4b7e"
dados <-loadDataApiV2(station,Sys.Date()-15,Sys.Date())
dados$dtmeh<-as.POSIXct(strptime(dados$dtme,"%Y-%m-%d %H:%M:%S",tz=""))
View(dados)
View(dados)
dados$dtmeh<-format(as.POSIXct(strptime(dadosJson$datetime,"%Y-%m-%d %H:%M",tz="")) ,
format = "%Y-%m-%d %H:%M:%S")
dados$dtmeh<-format(as.POSIXct(strptime(dados$dtme,"%Y-%m-%d %H:%M",tz="")) ,
format = "%Y-%m-%d %H:%M:%S")
View(dados)
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
dados <-loadDataApiV2(station,Sys.Date()-15,Sys.Date())
dados <-loadDataApiV2(station,Sys.Date()-15,Sys.Date())
station <-"5b917e865415ab64cd6f4b7e"
dados <-loadDataApiV2(station,Sys.Date()-15,Sys.Date())
dados$dtmeh<-as.POSIXct(strptime(dados$dtme,"%Y-%m-%d %H:%M:%S",tz=""))
dados$dtme<-as.POSIXct(strptime(dados$dtme,"%Y-%m-%d %H:%M",tz=""))
dados$h<-format(as.POSIXct(strptime(dados$dtme,"%Y-%m-%d %H:%M",tz="")) ,
format = "%H")
View(dados)
p2 <- plot_ly(dados,x=~dtme, y=~avgT,
type = 'scatter',
color = I("red"),
name = "Temperatura",
mode="line",
hoverinfo = 'text',
text = ~paste('Data:', dtme,
'<br>Temperatura: ',avgT))%>%
layout(
yaxis = list (title = "Temperatura(C)"))
p2
dados[order(dados$dtme)]
arrange(dados,desc(dtme))
z<-arrange(dados,desc(dtme))
View(z)
View(dados)
dados <-z
View(dados)
View(z)
p2 <- plot_ly(dados,x=~dtme, y=~avgT,
type = 'scatter',
color = I("red"),
name = "Temperatura",
mode="line",
hoverinfo = 'text',
text = ~paste('Data:', dtme,
'<br>Temperatura: ',avgT))%>%
layout(
yaxis = list (title = "Temperatura(C)"))
p2
runApp('Documents/startup/dashboard')
shiny::runApp('Google Drive/projetos/CIMMYT/wheatblast')
runApp('Google Drive/projetos/CIMMYT/wheatblast')
runApp('Google Drive/projetos/CIMMYT/wheatblast')
runApp('Google Drive/projetos/CIMMYT/wheatblast')
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
View(pinmet)
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
d <-z
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
0+(5*60)
tempo <- 60/5
tempo
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
runApp('Documents/startup/dashboard')
60/5
12/60
60/12
60/4
45/15
15%15
15%%15
30%%15
45%%15
46%%15
40%%15
0%%15
5%%15
10%%15
20%%15
5%%15
25%%15
30%%15
35%%15
40%%15
45%%15
60/4
60/5
0%%12
12%%12
10%%12
23%%12
43%%12
24%%12
0%%15
5%%15
19%%15
10%%15
15%%15
20%%15
25%%15
30%%15
35%%15
40%%15
45%%15
0%%15
0%%12
6%%12
12%%12
18%%12
60/4
60/12
60/24
60/15
60/4
60/5
12/5
15/4
12/5
60/6
0%%10
12/5
vet <-seq(0:55,by=5)
?seq
vet <-seq(0,55,by=5)
vet
60/5
60/4
15/4
60/4
60/5
c<-vet %% 15
df<-data.frame(hr = vet , ret = c)
View(df)
View(df)
12/2
vet <-seq(0,60,by=5)
vet
c<-vet %% 15
df<-data.frame(hr = vet , ret = c)
View(df)
vet <-seq(0,60,by=5)
vet
c<-vet %% 15
df<-data.frame(hr = vet , ret = c)
vet2 <-seq(0,60,by=5)
c2<-vet %% 12
df2<-data.frame(hr = vet2 , ret = c2)
View(df)
View(df2)
vet2 <-seq(0,60,by=2)
c2<-vet %% 12
df2<-data.frame(hr = vet2 , ret = c2)
vet2 <-seq(0,60,by=2)
c2<-vet %% 12
vet2 <-seq(0,60,by=2)
c2<-vet2 %% 12
df2<-data.frame(hr = vet2 , ret = c2)
View(df2)
View(df)
60/4
library("httr")
data <-'{"data":[{"sid":"5bef02945415ab64cd6f4b7f","geoid":"BRRSPFO","date":"2018-11-20 ","utc":"-3","itl":"60","obsd":[{"dtme":"2018-11-20 19:30","avgT":27.10,"avgH":48.23,"winS":0,"winD":0,"solR":0,"totR":0,"soT":0,"avgDP":0,"obs":[{"vps":0.84,"vbat":0.73,"tCpu":53.33}]}]}]}{"data":[{"sid":"5bef02945415ab64cd6f4b7f","geoid":"BRRSPFO","date":"2018-11-20 ","utc":"-3","itl":"60","obsd":[{"dtme":"2018-11-20 19:30","avgT":27.10,"avgH":48.23,"winS":0,"winD":0,"solR":0,"totR":0,"soT":0,"avgDP":0,"obs":[{"vps":0.84,"vbat":0.73,"tCpu":53.33}]}]}]}'
POST("http://dev.sisalert.com.br/apiweather/api/v2/data/insert",
config = content_type("application/json"),
body =data)
data <-'{"data":[{"sid":"5bef02945415ab64cd6f4b7f","geoid":"BRRSPFO","date":"2018-11-20","utc":"-3","itl":"60","obsd":[{"dtme":"2018-11-20 19:30","avgT":27.10,"avgH":48.23,"winS":0,"winD":0,"solR":0,"totR":0,"soT":0,"avgDP":0,"obs":[{"vps":0.84,"vbat":0.73,"tCpu":53.33}]}]}]}'
POST("http://dev.sisalert.com.br/apiweather/api/v2/data/insert",
config = content_type("application/json"),
body =data)
31536000
as.POSIXct(val, origin="1970-01-01")
as.POSIXct(31536000, origin="1970-01-01")
as.POSIXct(31536000, origin="2000-01-01")
as.POSIXct(946684800, origin="1970-01-01")
as.POSIXct(946684800, origin="01-01-1970")
as.POSIXct(946684800, origin="1970-01-01")
val <- 1352068320
as.POSIXct(val, origin="1970-01-01")
val <- 31536000
as.POSIXct(val, origin="1970-01-01")
as.POSIXct(val, origin="2000-01-01")
val <- 252460800
as.POSIXct(val, origin="2000-01-01")
as.POSIXct(val, origin="01-01-2000")
val <- 252460800
as.POSIXct(val, origin="01-01-2000")
val <- 252460800
as.POSIXct(val, origin="2000-01-01")
val <- 596073600
as.POSIXct(val, origin="2000-01-01")
as.POSIXct(val, origin="1970-01-01")
12.38/4
4+2+1+1+1+2
11*50
11*55
11*54
11*55
128
(128 - 32) / 1.8
22%11
22%%11
33%%11
605%%11
605/11
1000/2
4096/11
4000/11
4095/11
4090/11
4092/11
24*4
10000/96
10000/2
10000/1
4092/11
372/4
0.4*10
4096/13
4095/13
4093/13
4094/13
4092/13
4091/13
4090/13
4095/13
4096/12
4094/12
4092/12
4092/11
4092/12
4092/11
0.4
0.4*10
0.4/10
0.42*10
0.42*100
0.25*10
0.5*10
0.51*10
5.1/10
15.5*1000
15500/1000
0.51*1-
asdf
0.51*10
0.51*100
5.2*100
34.3*2
3.46*10
0.69*10
3.6*2
7/2
30.5*100
0.5*100
0.5*10
0.35*10
0.05*100
0.5*100
0.033*100
install.packages("solaR")
shiny::runApp('Google Drive/projetos/startup/dashboard')
runApp('Google Drive/projetos/startup/dashboard')
runApp('Google Drive/projetos/brusone')
runApp('Google Drive/projetos/CIMMYT/wheatblast/bk')
runApp('Google Drive/projetos/CIMMYT/wheatblast/bk')
runApp('Google Drive/projetos/startup/dashboard')
runApp('Google Drive/projetos/startup/dashboard')
runApp('Google Drive/projetos/startup/dashboard')
runApp('Google Drive/projetos/startup/dashboard')
runApp('Google Drive/projetos/startup/dashboard')
shiny::runApp('Google Drive/projetos/CIMMYT/wheatblast')
setwd("~/Google Drive/projetos/CIMMYT/wheatblast/www")
runApp('~/Google Drive/projetos/CIMMYT/wheatblast')
runApp('~/Google Drive/projetos/CIMMYT/wheatblast')
